apply plugin: 'com.android.application'
apply plugin: 'realm-android'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'


def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}

android {
    compileSdkVersion parent.ext.compileSdkVersion
    buildToolsVersion parent.ext.buildToolsVersion
    defaultConfig {
        applicationId "t3t.baseproj"
        minSdkVersion parent.ext.minSdkVersion
        targetSdkVersion parent.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        flavorDimensions "versionCode"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }

    }
    //签名
    signingConfigs {
        debug {

        }
        release {
//            storeFile file('../fyagent.jks')
//            storePassword properties.getProperty("RELEASE_STORE_PASSWORD")
//            keyAlias 'fyagent'
//            keyPassword properties.getProperty("RELEASE_KEY_PASSWORD")
        }
    }
    buildTypes {
        debug {
            buildConfigField "boolean", "IS_DEBUG", "true"
            versionNameSuffix "-debug"
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            signingConfig signingConfigs.debug
        }
        release {
            buildConfigField "boolean", "IS_DEBUG", "false"
            minifyEnabled false
            zipAlignEnabled true
            //移除无用的resource文件
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    configurations.all {
        resolutionStrategy {
            force "com.android.support:recyclerview-v7:$supportVersion"
            force "com.android.support:appcompat-v7:$supportVersion"
            force "com.android.support:design:$supportVersion"
            force "com.android.support:support-vector-drawable:$supportVersion"
        }
    }

    lintOptions {
        abortOnError false
        checkReleaseBuilds false
    }

    dexOptions {
        dexInProcess true
        preDexLibraries true
        javaMaxHeapSize "4g"//越大越好
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                //TODO 这里修改apk文件名
                if ('release'.endsWith(variant.buildType.name)) {
                    outputFileName = "Release_v${defaultConfig.versionName}_${releaseTime()}_${variant.productFlavors[0].name}.apk"
                } else if ('debug'.endsWith(variant.buildType.name)) {
                    outputFileName = "Debug_v${defaultConfig.versionName}_${releaseTime()}.apk"
                }
            }
        }
    }

    productFlavors {//渠道包
        dev {} //不要删除
        //_360 {}       //无法使用纯数字,加个前缀
    }

    productFlavors.all {
        flavor -> flavor.manifestPlaceholders = [GRADLE_CHANNEL_VALUE: name]
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':basebusinesslib')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "com.jakewharton:butterknife:$butterknife_version"

    annotationProcessor "com.jakewharton:butterknife-compiler:$butterknife_compiler_version"
    annotationProcessor "com.alibaba:arouter-compiler:$arouter_compiler_version"

    implementation project(':basebusinesslib')

    implementation project(':netrequestdemo')
}
